 Terraform ( Infrastructure as a Code )
 
 - terraform & ansible are client only architecture model which means no need to have master server.
 - chef, puppet are client server model which means master should be there
 
  - Terraform stages :- init, plan, apply, destroy
  
   * Provide 
    provide "aws" {
       region = "us-east-1"
       access_key = "my-access-key"
       secret_key = "my-secret-key"
    }
    
    * keypair creation
      variable "mykey_name" {
          default = "anil_key"
       }
      resource "aws_key_pair" "deployer" {
  key_name   = "${var.mykey_name}"
  public_key = "<pub-key>"
  }
  
  - terraform plan -var mykey_name = "anil_key" -> to pass the var from command line
  
  * terraform.tfstate
    - The state is the data that Terraform has recorded about a workspace at a particular point in its lifecycle, usually after an apply. 
    
  * terraform.tfstate.backup
    - it will store the backup of the previous version of the execution, if screw the infrastructure we can backup from this file.
    
  * terraform show -> it shows the general information of the previous version of the data
  
  * myvar.tfvars -> variables can be define under the name
   
    ex:-  vi myvars.tfvars
          mykey_name = "anil_key"
          
          terraform plan -var-file=myvars.tfvars
     
* instance creation

resource "aws_instance" "web" {
  ami           = data.aws_ami.ubuntu.id
  instance_type = "t3.micro"

  tags = {
    Name = "HelloWorld"
  }
} 
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
    
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
